// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "Alexey Yudin",
            "url": "http://www.swagger.io/support",
            "email": "spdante@mail.ru"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/docs": {
            "get": {
                "description": "Возвращает список документов с возможностью фильтрации по пользователю",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "documents"
                ],
                "summary": "Получить список документов",
                "parameters": [
                    {
                        "description": "Параметры запроса списка документов",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.DocumentListRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Для HEAD запроса - только проверка доступности"
                    },
                    "400": {
                        "description": "Некорректные параметры запроса",
                        "schema": {
                            "$ref": "#/definitions/entity.ApiError"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/entity.ApiError"
                        }
                    },
                    "503": {
                        "description": "Сервер недоступен",
                        "schema": {
                            "$ref": "#/definitions/entity.ApiError"
                        }
                    }
                }
            },
            "post": {
                "description": "Загружает и сохраняет документ с метаданными и опциональным JSON содержимым",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "documents"
                ],
                "summary": "Сохранить документ",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Метаданные документа в формате JSON",
                        "name": "meta",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "JSON содержимое документа",
                        "name": "json",
                        "in": "formData"
                    },
                    {
                        "type": "file",
                        "description": "Файл документа (если meta.file = true)",
                        "name": "file",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Документ успешно сохранен",
                        "schema": {
                            "$ref": "#/definitions/entity.ApiResponse"
                        }
                    },
                    "400": {
                        "description": "Некорректные параметры запроса",
                        "schema": {
                            "$ref": "#/definitions/entity.ApiError"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/entity.ApiError"
                        }
                    },
                    "503": {
                        "description": "Сервер недоступен",
                        "schema": {
                            "$ref": "#/definitions/entity.ApiError"
                        }
                    }
                }
            },
            "head": {
                "description": "Возвращает список документов с возможностью фильтрации по пользователю",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "documents"
                ],
                "summary": "Получить список документов",
                "parameters": [
                    {
                        "description": "Параметры запроса списка документов",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.DocumentListRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Для HEAD запроса - только проверка доступности"
                    },
                    "400": {
                        "description": "Некорректные параметры запроса",
                        "schema": {
                            "$ref": "#/definitions/entity.ApiError"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/entity.ApiError"
                        }
                    },
                    "503": {
                        "description": "Сервер недоступен",
                        "schema": {
                            "$ref": "#/definitions/entity.ApiError"
                        }
                    }
                }
            }
        },
        "/docs/": {
            "get": {
                "description": "Возвращает документ по его идентификатору",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/octet-stream",
                    "application/json"
                ],
                "tags": [
                    "documents"
                ],
                "summary": "Получить документ по ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Идентификатор документа",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Для HEAD запроса - только проверка доступности"
                    },
                    "400": {
                        "description": "Документ не найден или ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/entity.ApiError"
                        }
                    },
                    "503": {
                        "description": "Сервер недоступен",
                        "schema": {
                            "$ref": "#/definitions/entity.ApiError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Удаляет документ по его идентификатору",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "documents"
                ],
                "summary": "Удалить документ по ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Идентификатор документа",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Документ успешно удален",
                        "schema": {
                            "$ref": "#/definitions/entity.ApiResponse"
                        }
                    },
                    "400": {
                        "description": "Ошибка при удалении документа",
                        "schema": {
                            "$ref": "#/definitions/entity.ApiError"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/entity.ApiError"
                        }
                    },
                    "503": {
                        "description": "Сервер недоступен",
                        "schema": {
                            "$ref": "#/definitions/entity.ApiError"
                        }
                    }
                }
            },
            "head": {
                "description": "Возвращает документ по его идентификатору",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/octet-stream",
                    "application/json"
                ],
                "tags": [
                    "documents"
                ],
                "summary": "Получить документ по ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Идентификатор документа",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Для HEAD запроса - только проверка доступности"
                    },
                    "400": {
                        "description": "Документ не найден или ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/entity.ApiError"
                        }
                    },
                    "503": {
                        "description": "Сервер недоступен",
                        "schema": {
                            "$ref": "#/definitions/entity.ApiError"
                        }
                    }
                }
            }
        },
        "/register": {
            "post": {
                "description": "Регистрирует нового пользователя в системе с использованием административного токена",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Регистрация нового пользователя",
                "parameters": [
                    {
                        "description": "Данные пользователя для регистрации",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.User"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Пользователь успешно зарегистрирован",
                        "schema": {
                            "$ref": "#/definitions/entity.ApiResponse"
                        }
                    },
                    "400": {
                        "description": "Некорректные данные запроса",
                        "schema": {
                            "$ref": "#/definitions/entity.ApiError"
                        }
                    },
                    "403": {
                        "description": "Неверный административный токен",
                        "schema": {
                            "$ref": "#/definitions/entity.ApiError"
                        }
                    },
                    "409": {
                        "description": "Пользователь уже существует",
                        "schema": {
                            "$ref": "#/definitions/entity.ApiError"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/entity.ApiError"
                        }
                    },
                    "503": {
                        "description": "Сервер недоступен",
                        "schema": {
                            "$ref": "#/definitions/entity.ApiError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "entity.ApiError": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "text": {
                    "type": "string"
                }
            }
        },
        "entity.ApiResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object",
                    "additionalProperties": true
                },
                "error": {
                    "$ref": "#/definitions/entity.ApiError"
                },
                "response": {
                    "type": "object",
                    "additionalProperties": true
                }
            }
        },
        "entity.DocumentListRequest": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "login": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "model.User": {
            "type": "object",
            "properties": {
                "login": {
                    "type": "string"
                },
                "pswd": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "Type \"Bearer\" followed by a space and JWT token.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:7540",
	BasePath:         "/api",
	Schemes:          []string{},
	Title:            "Document Cache Server API",
	Description:      "API для управления документами и кэширования",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
