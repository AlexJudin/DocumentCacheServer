services:
  doc_serv:
    env_file:
      - .env
    build:
      context: .
      args:
         APP_NAME: ${APP_NAME}
         VERSION: ${VERSION}
         BUILD_TIME: ${BUILD_TIME}
    ports:
      - "${PORT}:7540"
    networks:
      - doc_serv_network
    depends_on:
      postgres:
        condition: service_started
      redis:
        condition: service_started
      mongodb:
        condition: service_started
      minio:
        condition: service_started

  postgres:
    image: postgres:alpine
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - ./data/postgresql:/var/lib/postgresql/data
    networks:
      - doc_serv_network

  redis:
    image: redis:latest
    container_name: redis_container
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    ports:
      - "${REDIS_PORT}:6379"
    volumes:
      - ./data/redisdata:/data
    networks:
      - doc_serv_network

  mongodb:
    image: mongo:latest
    container_name: mongodb
    ports:
      - "${MGDB_PORT}:27017"
    volumes:
      - ./data/mongodb_data:/data/db
    networks:
      - doc_serv_network

  minio:
    image: minio/minio:latest
    container_name: file_storage
    command: server /data --console-address ":9001"
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
    ports:
      - "${MINIO_ROOT_PORT}:9000"  # API порт
      - "${MINIO_ADMIN_PORT}:9001"  # Web консоль
    volumes:
      - ./data/minio_data:/data
    networks:
      - doc_serv_network

volumes:
  postgresql:
  mongodb_data:
  minio_data:
    driver: local

networks:
  doc_serv_network:
    driver: bridge
